(()=>{var t={138:t=>{!function(){function e(t){return new e.prototype.init(t)}e.prototype={constructor:e,init:function(t){t=t||{};let e={context:document,attr:"lazy-image",threshold:1,speed:300,callback:Function.prototype},o=Object.assign(e,t);this.config=o,this.imageBoxList=[];const i={threshold:[o.threshold]};this.ob=new IntersectionObserver((t=>{t.forEach((t=>{let{isIntersecting:e,target:o}=t;e&&(this.singleHandle(o),this.ob.unobserve(o))}))}),i),this.observeAll()},singleHandle:function(t){let e=this.config,o=t.querySelector("img"),i=o.getAttribute(e.attr);o.src=i,o.removeAttribute(e.attr),o.onload=()=>{o.style.transition=`opacity ${e.speed}ms`,o.style.opacity=1,e.callback.call(this,o)}},observeAll(t){let e=this.config,o=e.context.querySelectorAll(`img[${e.attr}]`);[].forEach.call(o,(e=>{let o=e.parentNode;t&&this.imageBoxList.includes(o)||(this.imageBoxList.push(o),this.ob.observe(o))}))},refresh:function(){this.observeAll(!0)}},e.prototype.init.prototype=e.prototype,"undefined"!=typeof window&&(window.LazyImage=e),"object"==typeof t.exports&&(t.exports=e)}()}},e={};!function o(i){var r=e[i];if(void 0!==r)return r.exports;var s=e[i]={exports:{}};return t[i](s,s.exports,o),s.exports}(138)})();